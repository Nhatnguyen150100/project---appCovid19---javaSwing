/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.mavenproject1.loginForm;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.Objects;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;


/**
 *
 * @author nhatnguyen
 */
public class SignUp extends javax.swing.JFrame {
    Socket socketSignUp;
    /**
     * Creates new form Home
     */
    public SignUp(Socket socket) {
        socketSignUp = socket;
        initComponents();
    }

    public SignUp() {
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        userName = new javax.swing.JTextField();
        userPassword = new javax.swing.JPasswordField();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        sign_upBtn = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        confirmPassword = new javax.swing.JPasswordField();
        jLabel7 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(116, 214, 193));

        jLabel2.setIcon(new javax.swing.ImageIcon("/home/nhatnguyen/Pictures/backgroud.png")); // NOI18N

        jLabel1.setBackground(java.awt.Color.white);
        jLabel1.setFont(new java.awt.Font("DialogInput", 1, 24)); // NOI18N
        jLabel1.setForeground(java.awt.Color.white);
        jLabel1.setText("KHAI BÁO Y TẾ - GIẢM THIỂU LÂY LAN");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(jLabel2)))
                .addContainerGap(143, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(106, 106, 106)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(220, 153, 141));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        userName.setBackground(new java.awt.Color(220, 153, 141));
        userName.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        userName.setForeground(java.awt.Color.white);
        userName.setText("UserName");
        userName.setToolTipText("User Name");
        userName.setBorder(null);
        userName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                userNameFocusGained(evt);
            }
        });
        jPanel3.add(userName, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 220, 350, 60));

        userPassword.setBackground(new java.awt.Color(220, 153, 141));
        userPassword.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        userPassword.setForeground(java.awt.Color.white);
        userPassword.setText("Password");
        userPassword.setToolTipText("Password");
        userPassword.setBorder(null);
        userPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                userPasswordFocusGained(evt);
            }
        });
        jPanel3.add(userPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 320, 350, 50));

        jSeparator1.setBackground(java.awt.Color.white);
        jSeparator1.setForeground(java.awt.Color.white);
        jPanel3.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 370, 350, 30));

        jSeparator2.setBackground(java.awt.Color.white);
        jSeparator2.setForeground(java.awt.Color.white);
        jPanel3.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 280, 350, 30));

        jLabel3.setIcon(new javax.swing.ImageIcon("/home/nhatnguyen/Pictures/icons8-password-100 (1).png")); // NOI18N
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 310, 50, 60));

        jLabel4.setIcon(new javax.swing.ImageIcon("/home/nhatnguyen/Pictures/icons8-user-48.png")); // NOI18N
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 220, 50, 60));

        sign_upBtn.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        sign_upBtn.setText("Sign up");
        sign_upBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sign_upBtnMouseClicked(evt);
            }
        });
        sign_upBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sign_upBtnActionPerformed(evt);
            }
        });
        jPanel3.add(sign_upBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 500, 240, 60));

        jLabel6.setFont(new java.awt.Font("Ubuntu", 1, 36)); // NOI18N
        jLabel6.setForeground(java.awt.Color.white);
        jLabel6.setText("Welcome to PC COVID");
        jPanel3.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 130, -1, -1));

        confirmPassword.setBackground(new java.awt.Color(220, 153, 141));
        confirmPassword.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        confirmPassword.setForeground(java.awt.Color.white);
        confirmPassword.setText("password");
        confirmPassword.setToolTipText("Confirm password");
        confirmPassword.setBorder(null);
        confirmPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                confirmPasswordFocusGained(evt);
            }
        });
        jPanel3.add(confirmPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 410, 350, 50));

        jLabel7.setIcon(new javax.swing.ImageIcon("/home/nhatnguyen/Pictures/icons8-password-48.png")); // NOI18N
        jPanel3.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 400, 50, 60));

        jSeparator3.setBackground(java.awt.Color.white);
        jSeparator3.setForeground(java.awt.Color.white);
        jPanel3.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 460, 350, 30));

        jButton1.setIcon(new javax.swing.ImageIcon("/home/nhatnguyen/Downloads/icons8-back-48.png")); // NOI18N
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 500, 80, 60));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 527, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 641, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void userNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_userNameFocusGained
        userName.setText("");        // TODO add your handling code here:
    }//GEN-LAST:event_userNameFocusGained

    private void userPasswordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_userPasswordFocusGained
        userPassword.setText("");// TODO add your handling code here:
    }//GEN-LAST:event_userPasswordFocusGained

    private void sign_upBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sign_upBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sign_upBtnActionPerformed

    private void confirmPasswordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_confirmPasswordFocusGained
        confirmPassword.setText("");// TODO add your handling code here:
    }//GEN-LAST:event_confirmPasswordFocusGained

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        socketSignUp.close();
        dispose();
        NewSignUp login = null;
        try {
            login = new NewSignUp("");
        } catch (IOException ex) {
            Logger.getLogger(SignUp.class.getName()).log(Level.SEVERE, null, ex);
        }
        login.startLayout();// TODO add your handling code here:
    }//GEN-LAST:event_jButton1MouseClicked

    private void sign_upBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sign_upBtnMouseClicked
        String newUserName;
        String newPassword;
        String confirmPassword;
        newUserName = userName.getText();
        newPassword = userPassword.getText();
        confirmPassword = this.confirmPassword.getText();
        if("".equals(newUserName)){
           JOptionPane.showMessageDialog(jLabel3,
                "UserName không được để trống",
                "Error UserName",
                JOptionPane.ERROR_MESSAGE);
        }else if("".equals(newPassword)){
           JOptionPane.showMessageDialog(jLabel3,
                "Password không được để trống",
                "Error Password",
                JOptionPane.ERROR_MESSAGE);
        }else if("".equals(confirmPassword)){
           JOptionPane.showMessageDialog(jLabel3,
                "Confirm password không được để trống",
                "Error cofirm password",
                JOptionPane.ERROR_MESSAGE);
        }else if(!newPassword.equals(confirmPassword)){
            JOptionPane.showMessageDialog(jLabel3,
                "Password không trùng nhau!",
                "Error Confirm Password",
                JOptionPane.ERROR_MESSAGE);
        }else{
            int result = JOptionPane.showConfirmDialog(jLabel3,
                        "Bạn muốn tạo một tài khoản mới với tên đăng nhập và mật khẩu như trên",
                        "Xác nhận",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE);
            if(result == JOptionPane.YES_OPTION){
                try {
                    sendMessageToServer("2",socketSignUp);
                } catch (Exception e) {
                    System.out.println("can't send choice(2) to Server");
                }
                
                InputStream istream = socketSignUp.getInputStream();
                BufferedReader receiveRead = new BufferedReader(new InputStreamReader(istream), 1024);
                String newAccountMessage = createAccountMessage(newUserName, newPassword);
                try {
                    sendMessageToServer(newAccountMessage, socketSignUp);
                    checkOutPut(receiveRead,socketSignUp);
                } catch (Exception e) {
                }    
            }
        }

    }//GEN-LAST:event_sign_upBtnMouseClicked

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(SignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(SignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(SignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(SignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new SignUp().setVisible(true);
//            }
//        });
//    }

    public void startLayout(Socket socket){
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SignUp(socket).setVisible(true);
            }
        });
    }

    private void sendMessageToServer(String str, Socket sock) throws IOException {
        OutputStream ostream = sock.getOutputStream();
        PrintWriter pwrite = new PrintWriter(ostream, true);
        pwrite.println(str);       // sending to server
        pwrite.flush();            // flush the data
    }
    
    private String createAccountMessage(String name, String password){
        return name+ "_" +password;
    }

    private void checkOutPut(BufferedReader receiveRead, Socket socket) throws IOException {
        String receiveMessage;
        receiveMessage = String.valueOf(receiveRead.readLine());
        receiveMessage = removeNonAscii(receiveMessage);
        receiveMessage = replaceUnreadable(receiveMessage);
        if(!Objects.equals(receiveMessage, "0")) //receive from server
        {
            System.out.print("from server: ");
            System.out.println(receiveMessage); // displaying at DOS prompt
            if(receiveMessage.equals("Create a account successfully: Please enter personal information")){
//                String idUserFromSerVer = String.valueOf(receiveRead.readLine());
//                idUserFromSerVer = removeNonAscii(idUserFromSerVer);
//                idUserFromSerVer = replaceUnreadable(idUserFromSerVer);
                dispose();
                SignUpInfor signInfor;
                signInfor = new SignUpInfor();
                signInfor.startLayout(socketSignUp);
            }else{
                JOptionPane.showMessageDialog(jPanel3,
                    receiveMessage,
                    "From Server",
                    JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }

    private static String removeNonAscii(String s){
        StringBuffer sb = new StringBuffer();
        for(int i=0; i<s.length(); ++i){
            if(s.charAt(i) < 128){
                sb.append(s.charAt(i));
            }
        }
        return sb.toString();
    }

    private static String replaceUnreadable(String s){
        return s.replaceAll("\\P{Print}", "");
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPasswordField confirmPassword;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JButton sign_upBtn;
    private javax.swing.JTextField userName;
    private javax.swing.JPasswordField userPassword;
    // End of variables declaration//GEN-END:variables
}
